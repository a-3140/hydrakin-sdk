{"version":3,"file":"sdk.esm.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/apollo/fragments.ts","../src/apollo/mutations.ts","../src/constants.ts","../src/core/constants.ts","../src/core/storage.ts","../src/apollo/queries.ts","../src/core/auth.ts","../src/core/user.ts","../src/core/state.ts","../src/apollo/client.ts","../src/core/createSaleorClient.ts","../src/react/components/SaleorProvider.tsx","../src/react/helpers/hookFactory.ts","../src/react/helpers/hookStateFactory.ts","../src/react/hooks/auth.ts","../src/react/hooks/user.ts","../src/react/hooks/saleorConfig.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { gql } from \"@apollo/client\";\n\nexport const accountErrorFragment = gql`\n  fragment AccountErrorFragment on AccountError {\n    code\n    field\n    message\n  }\n`;\n\nexport const addressFragment = gql`\n  fragment AddressFragment on Address {\n    id\n    firstName\n    lastName\n    companyName\n    streetAddress1\n    streetAddress2\n    city\n    cityArea\n    postalCode\n    country {\n      code\n      country\n    }\n    countryArea\n    phone\n    isDefaultBillingAddress\n    isDefaultShippingAddress\n  }\n`;\n\nexport const userBaseFragment = gql`\n  fragment UserBaseFragment on User {\n    id\n    email\n    firstName\n    lastName\n    isStaff\n    isSeller\n  }\n`;\n\nexport const userDetailsFragment = gql`\n  ${addressFragment}\n  ${userBaseFragment}\n  fragment UserDetailsFragment on User {\n    ...UserBaseFragment\n    metadata {\n      key\n      value\n    }\n    defaultShippingAddress {\n      ...AddressFragment\n    }\n    defaultBillingAddress {\n      ...AddressFragment\n    }\n    addresses {\n      ...AddressFragment\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nimport {\n  accountErrorFragment,\n  addressFragment,\n  userBaseFragment,\n  userDetailsFragment,\n} from \"./fragments\";\n\nexport const LOGIN_WITHOUT_DETAILS = gql`\n  ${accountErrorFragment}\n  ${userBaseFragment}\n  mutation loginWithoutDetails($email: String!, $password: String!) {\n    tokenCreate(email: $email, password: $password) {\n      csrfToken\n      token\n      errors {\n        ...AccountErrorFragment\n      }\n      user {\n        ...UserBaseFragment\n      }\n    }\n  }\n`;\n\nexport const LOGIN = gql`\n  ${accountErrorFragment}\n  ${userDetailsFragment}\n  mutation login($email: String!, $password: String!) {\n    tokenCreate(email: $email, password: $password) {\n      csrfToken\n      token\n      errors {\n        ...AccountErrorFragment\n      }\n      user {\n        ...UserDetailsFragment\n      }\n    }\n  }\n`;\n\nexport const REGISTER = gql`\n  ${accountErrorFragment}\n  mutation register($input: AccountRegisterInput!) {\n    accountRegister(input: $input) {\n      errors {\n        ...AccountErrorFragment\n      }\n      requiresConfirmation\n    }\n  }\n`;\n\nexport const REFRESH_TOKEN = gql`\n  ${accountErrorFragment}\n  mutation refreshToken($csrfToken: String!) {\n    tokenRefresh(csrfToken: $csrfToken) {\n      token\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`;\n\n// separate mutation so the request payload is minimal when user is not needed\n// used for initial authentication\nexport const REFRESH_TOKEN_WITH_USER = gql`\n  ${accountErrorFragment}\n  ${userDetailsFragment}\n  mutation refreshTokenWithUser($csrfToken: String!) {\n    tokenRefresh(csrfToken: $csrfToken) {\n      token\n      user {\n        ...UserDetailsFragment\n      }\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`;\n\nexport const VERIFY_TOKEN = gql`\n  ${accountErrorFragment}\n  ${userDetailsFragment}\n  mutation verifyToken($token: String!) {\n    tokenVerify(token: $token) {\n      isValid\n      payload\n      user {\n        ...UserDetailsFragment\n      }\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`;\n\nexport const EXTERNAL_AUTHENTICATION_URL = gql`\n  ${accountErrorFragment}\n  mutation externalAuthenticationUrl(\n    $pluginId: String = \"mirumee.authentication.openidconnect\"\n    $input: JSONString!\n  ) {\n    externalAuthenticationUrl(pluginId: $pluginId, input: $input) {\n      authenticationData\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`;\n\nexport const OBTAIN_EXTERNAL_ACCESS_TOKEN = gql`\n  ${accountErrorFragment}\n  ${userDetailsFragment}\n  mutation externalObtainAccessTokens(\n    $pluginId: String = \"mirumee.authentication.openidconnect\"\n    $input: JSONString!\n  ) {\n    externalObtainAccessTokens(pluginId: $pluginId, input: $input) {\n      token\n      csrfToken\n      user {\n        ...UserDetailsFragment\n      }\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`;\n\nexport const EXTERNAL_REFRESH = gql`\n  ${accountErrorFragment}\n  mutation externalRefresh(\n    $pluginId: String = \"mirumee.authentication.openidconnect\"\n    $input: JSONString!\n  ) {\n    externalRefresh(pluginId: $pluginId, input: $input) {\n      token\n      csrfToken\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`;\n\nexport const EXTERNAL_REFRESH_WITH_USER = gql`\n  ${accountErrorFragment}\n  ${userDetailsFragment}\n  mutation externalRefreshWithUser(\n    $pluginId: String = \"mirumee.authentication.openidconnect\"\n    $input: JSONString!\n  ) {\n    externalRefresh(pluginId: $pluginId, input: $input) {\n      token\n      csrfToken\n      user {\n        ...UserDetailsFragment\n      }\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`;\n\nexport const EXTERNAL_VERIFY_TOKEN = gql`\n  ${accountErrorFragment}\n  ${userDetailsFragment}\n  mutation externalVerify(\n    $pluginId: String = \"mirumee.authentication.openidconnect\"\n    $input: JSONString!\n  ) {\n    externalVerify(pluginId: $pluginId, input: $input) {\n      isValid\n      verifyData\n      user {\n        ...UserDetailsFragment\n        userPermissions {\n          code\n          name\n        }\n      }\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`;\n\nexport const EXTERNAL_LOGOUT = gql`\n  ${accountErrorFragment}\n  mutation externalLogout(\n    $pluginId: String = \"mirumee.authentication.openidconnect\"\n    $input: JSONString!\n  ) {\n    externalLogout(pluginId: $pluginId, input: $input) {\n      logoutData\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`;\n\nexport const CHANGE_USER_PASSWORD = gql`\n  ${accountErrorFragment}\n  mutation passwordChange($newPassword: String!, $oldPassword: String!) {\n    passwordChange(newPassword: $newPassword, oldPassword: $oldPassword) {\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`;\n\nexport const REQUEST_PASSWORD_RESET = gql`\n  ${accountErrorFragment}\n  mutation requestPasswordReset(\n    $email: String!\n    $redirectUrl: String!\n    $channel: String!\n  ) {\n    requestPasswordReset(\n      email: $email\n      redirectUrl: $redirectUrl\n      channel: $channel\n    ) {\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`;\n\nexport const SET_PASSWORD = gql`\n  ${userDetailsFragment}\n  ${accountErrorFragment}\n  mutation setPassword($token: String!, $email: String!, $password: String!) {\n    setPassword(token: $token, email: $email, password: $password) {\n      errors {\n        ...AccountErrorFragment\n      }\n      token\n      csrfToken\n      user {\n        ...UserDetailsFragment\n      }\n    }\n  }\n`;\n\nexport const REQUEST_EMAIL_CHANGE = gql`\n  ${userDetailsFragment}\n  ${accountErrorFragment}\n  mutation requestEmailChange(\n    $channel: String!\n    $newEmail: String!\n    $password: String!\n    $redirectUrl: String!\n  ) {\n    requestEmailChange(\n      channel: $channel\n      newEmail: $newEmail\n      password: $password\n      redirectUrl: $redirectUrl\n    ) {\n      errors {\n        ...AccountErrorFragment\n      }\n      user {\n        ...UserDetailsFragment\n      }\n    }\n  }\n`;\n\nexport const CONFIRM_EMAIL_CHANGE = gql`\n  ${userDetailsFragment}\n  ${accountErrorFragment}\n  mutation confirmEmailChange($channel: String!, $token: String!) {\n    confirmEmailChange(channel: $channel, token: $token) {\n      errors {\n        ...AccountErrorFragment\n      }\n      user {\n        ...UserDetailsFragment\n      }\n    }\n  }\n`;\n\nexport const REQUEST_DELETE_ACCOUNT = gql`\n  ${accountErrorFragment}\n  mutation accountRequestDeletion($channel: String!, $redirectUrl: String!) {\n    accountRequestDeletion(channel: $channel, redirectUrl: $redirectUrl) {\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`;\n\nexport const DELETE_ACCOUNT = gql`\n  ${userDetailsFragment}\n  ${accountErrorFragment}\n  mutation accountDelete($token: String!) {\n    accountDelete(token: $token) {\n      errors {\n        ...AccountErrorFragment\n      }\n      user {\n        ...UserDetailsFragment\n      }\n    }\n  }\n`;\n\nexport const UPDATE_ACCOUNT = gql`\n  ${userDetailsFragment}\n  ${accountErrorFragment}\n  mutation accountUpdate($input: AccountInput!) {\n    accountUpdate(input: $input) {\n      errors {\n        ...AccountErrorFragment\n      }\n      user {\n        ...UserDetailsFragment\n      }\n    }\n  }\n`;\n\nexport const SET_ACCOUNT_DEFAULT_ADDRESS = gql`\n  ${userDetailsFragment}\n  ${accountErrorFragment}\n  mutation setAccountDefaultAddress($id: ID!, $type: AddressTypeEnum!) {\n    accountSetDefaultAddress(id: $id, type: $type) {\n      errors {\n        ...AccountErrorFragment\n      }\n      user {\n        ...UserDetailsFragment\n      }\n    }\n  }\n`;\n\nexport const DELETE_ACCOUNT_ADDRESS = gql`\n  ${userDetailsFragment}\n  ${accountErrorFragment}\n  mutation deleteAccountAddress($addressId: ID!) {\n    accountAddressDelete(id: $addressId) {\n      errors {\n        ...AccountErrorFragment\n      }\n      user {\n        ...UserDetailsFragment\n      }\n    }\n  }\n`;\n\nexport const CREATE_ACCOUNT_ADDRESS = gql`\n  ${addressFragment}\n  ${userDetailsFragment}\n  ${accountErrorFragment}\n  mutation createAccountAddress($input: AddressInput!) {\n    accountAddressCreate(input: $input) {\n      address {\n        ...AddressFragment\n      }\n      errors {\n        ...AccountErrorFragment\n      }\n      user {\n        ...UserDetailsFragment\n      }\n    }\n  }\n`;\n\nexport const UPDATE_ACCOUNT_ADDRESS = gql`\n  ${addressFragment}\n  ${userDetailsFragment}\n  ${accountErrorFragment}\n  mutation updateAccountAddress($input: AddressInput!, $id: ID!) {\n    accountAddressUpdate(input: $input, id: $id) {\n      address {\n        ...AddressFragment\n      }\n      errors {\n        ...AccountErrorFragment\n      }\n      user {\n        ...UserDetailsFragment\n      }\n    }\n  }\n`;\n\nexport const CONFIRM_ACCOUNT = gql`\n  ${userDetailsFragment}\n  ${accountErrorFragment}\n  mutation accountConfirm($email: String!, $token: String!) {\n    confirmAccount(email: $email, token: $token) {\n      user {\n        ...UserDetailsFragment\n      }\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`;\n","export const WINDOW_EXISTS = typeof window !== \"undefined\";\nexport const LOCAL_STORAGE_EXISTS = WINDOW_EXISTS && !!window.localStorage;\nexport const DEVELOPMENT_MODE = process.env.NODE_ENV === \"development\";\n","export const SALEOR_AUTH_PLUGIN_ID = \"_saleorAuthPluginId\";\nexport const SALEOR_CSRF_TOKEN = \"_saleorCSRFToken\";\n","import { LOCAL_STORAGE_EXISTS } from \"../constants\";\nimport { SALEOR_AUTH_PLUGIN_ID, SALEOR_CSRF_TOKEN } from \"./constants\";\n\nexport let storage: {\n  setAuthPluginId: (method: string | null) => void;\n  getAuthPluginId: () => string | null;\n  setAccessToken: (token: string | null) => void;\n  getAccessToken: () => string | null;\n  setCSRFToken: (token: string | null) => void;\n  getCSRFToken: () => string | null;\n  setTokens: (tokens: {\n    accessToken: string | null;\n    csrfToken: string | null;\n  }) => void;\n  clear: () => void;\n};\n\nexport const createStorage = (autologinEnabled: boolean): void => {\n  let authPluginId: string | null = LOCAL_STORAGE_EXISTS\n    ? localStorage.getItem(SALEOR_AUTH_PLUGIN_ID)\n    : null;\n  let accessToken: string | null = null;\n  let csrfToken: string | null =\n    autologinEnabled && LOCAL_STORAGE_EXISTS\n      ? localStorage.getItem(SALEOR_CSRF_TOKEN)\n      : null;\n\n  const setAuthPluginId = (pluginId: string | null): void => {\n    if (LOCAL_STORAGE_EXISTS) {\n      if (pluginId) {\n        localStorage.setItem(SALEOR_AUTH_PLUGIN_ID, pluginId);\n      } else {\n        localStorage.removeItem(SALEOR_AUTH_PLUGIN_ID);\n      }\n    }\n\n    authPluginId = pluginId;\n  };\n\n  const setCSRFToken = (token: string | null): void => {\n    if (autologinEnabled && LOCAL_STORAGE_EXISTS) {\n      if (token) {\n        localStorage.setItem(SALEOR_CSRF_TOKEN, token);\n      } else {\n        localStorage.removeItem(SALEOR_CSRF_TOKEN);\n      }\n    }\n\n    csrfToken = token;\n  };\n  const setAccessToken = (token: string | null): void => {\n    accessToken = token;\n  };\n\n  const getAuthPluginId = (): string | null => authPluginId;\n  const getAccessToken = (): string | null => accessToken;\n  const getCSRFToken = (): string | null => csrfToken;\n\n  const setTokens = ({\n    accessToken,\n    csrfToken,\n  }: {\n    accessToken: string | null;\n    csrfToken: string | null;\n  }): void => {\n    setAccessToken(accessToken);\n    setCSRFToken(csrfToken);\n  };\n\n  const clear = (): void => {\n    setAuthPluginId(null);\n    setAccessToken(null);\n    setCSRFToken(null);\n  };\n\n  storage = {\n    setAuthPluginId,\n    setAccessToken,\n    setCSRFToken,\n    getAuthPluginId,\n    getAccessToken,\n    getCSRFToken,\n    setTokens,\n    clear,\n  };\n};\n","import { gql } from \"@apollo/client\";\nimport { userBaseFragment, userDetailsFragment } from \"./fragments\";\n\nexport const USER_WITHOUT_DETAILS = gql`\n  ${userBaseFragment}\n  query UserWithoutDetails {\n    user: me {\n      ...UserBaseFragment\n    }\n    authenticated @client\n    authenticating @client\n  }\n`;\n\nexport const USER = gql`\n  ${userDetailsFragment}\n  query User {\n    user: me {\n      ...UserDetailsFragment\n    }\n    authenticated @client\n    authenticating @client\n  }\n`;\n","import {\n  CHANGE_USER_PASSWORD,\n  EXTERNAL_AUTHENTICATION_URL,\n  EXTERNAL_LOGOUT,\n  EXTERNAL_REFRESH,\n  EXTERNAL_VERIFY_TOKEN,\n  LOGIN,\n  OBTAIN_EXTERNAL_ACCESS_TOKEN,\n  REQUEST_PASSWORD_RESET,\n  REFRESH_TOKEN,\n  REGISTER,\n  SET_PASSWORD,\n  VERIFY_TOKEN,\n  REFRESH_TOKEN_WITH_USER,\n  EXTERNAL_REFRESH_WITH_USER,\n  LOGIN_WITHOUT_DETAILS,\n} from \"../apollo/mutations\";\nimport {\n  ExternalAuthenticationUrlMutation,\n  ExternalAuthenticationUrlMutationVariables,\n  ExternalLogoutMutation,\n  ExternalLogoutMutationVariables,\n  ExternalObtainAccessTokensMutation,\n  ExternalObtainAccessTokensMutationVariables,\n  ExternalRefreshMutation,\n  ExternalRefreshMutationVariables,\n  ExternalRefreshWithUserMutation,\n  ExternalRefreshWithUserMutationVariables,\n  ExternalVerifyMutation,\n  ExternalVerifyMutationVariables,\n  LoginMutation,\n  LoginMutationVariables,\n  PasswordChangeMutation,\n  PasswordChangeMutationVariables,\n  RefreshTokenMutation,\n  RefreshTokenMutationVariables,\n  RefreshTokenWithUserMutation,\n  RefreshTokenWithUserMutationVariables,\n  RegisterMutation,\n  RegisterMutationVariables,\n  RequestPasswordResetMutation,\n  RequestPasswordResetMutationVariables,\n  SetPasswordMutation,\n  SetPasswordMutationVariables,\n  VerifyTokenMutation,\n  VerifyTokenMutationVariables,\n} from \"../apollo/types\";\nimport {\n  ChangePasswordResult,\n  LogoutOpts,\n  GetExternalAccessTokenResult,\n  GetExternalAuthUrlResult,\n  LoginResult,\n  LogoutResult,\n  RefreshExternalTokenResult,\n  RefreshTokenResult,\n  RegisterResult,\n  RequestPasswordResetResult,\n  SaleorClientMethodsProps,\n  SetPasswordResult,\n  VerifyExternalTokenResult,\n  VerifyTokenResult,\n  GetExternalAuthUrlOpts,\n  GetExternalAccessTokenOpts,\n} from \"./types\";\nimport {\n  ChangePasswordOpts,\n  LoginOpts,\n  RegisterOpts,\n  RequestPasswordResetOpts,\n  SetPasswordOpts,\n} from \"./types\";\nimport { storage } from \"./storage\";\nimport { USER, USER_WITHOUT_DETAILS } from \"../apollo/queries\";\n\nexport interface AuthSDK {\n  /**\n   * Change the password of the logged in user.\n   *\n   * @param opts - Object with password and new password.\n   * @returns Errors if the passoword change has failed.\n   */\n  changePassword: (opts: ChangePasswordOpts) => Promise<ChangePasswordResult>;\n  /**\n   * Authenticates user with email and password.\n   *\n   * @param opts - Object with user's email, password and a boolean includeDetails - whether to fetch user details.\n   * Default for includeDetails is true.\n   * @returns Promise resolved with CreateToken type data.\n   */\n  login: (opts: LoginOpts) => Promise<LoginResult>;\n  /**\n   * Clears stored token and Apollo store. If external plugin was used to log in, the mutation will prepare\n   * the logout URL. All values passed in field input will be added as GET parameters to the logout request.\n   *\n   * @param opts - Object with input as JSON with returnTo - the URL where a user should be redirected\n   * when external plugin was used to log in\n   * @returns Logout data and errors if external plugin was used to log in. Otherwise null.\n   */\n  logout: (opts?: LogoutOpts) => Promise<LogoutResult>;\n  /**\n   * Refresh JWT token. Mutation will try to take refreshToken from the function's arguments.\n   * If it fails, it will try to use refreshToken from the http-only cookie called refreshToken.\n   *\n   * @param includeUser - Whether to fetch user. Default false.\n   * @returns Authorization token.\n   */\n  refreshToken: (includeUser?: boolean) => Promise<RefreshTokenResult>;\n  /**\n   * Registers user with email and password.\n   *\n   * @param opts - Object with user's data. Email and password are required fields.\n   * \"channel\" can be changed by using first \"setChannel\" method from api.\n   * @returns Promise resolved with AccountRegister type data.\n   */\n  register: (opts: RegisterOpts) => Promise<RegisterResult>;\n  /**\n   * Sends an email with the account password modification link.\n   *\n   * @param opts - Object with slug of a channel which will be used for notify user,\n   * email of the user that will be used for password recovery and URL of a view\n   * where users should be redirected to reset the password. URL in RFC 1808 format.\n   *\n   * @returns Errors if there were some.\n   */\n  requestPasswordReset: (\n    opts: RequestPasswordResetOpts\n  ) => Promise<RequestPasswordResetResult>;\n  /**\n   * Sets the user's password from the token sent by email.\n   *\n   * @param opts - Object with user's email, password and one-time token required to set the password.\n   * @returns User instance, JWT token, JWT refresh token and CSRF token.\n   */\n  setPassword: (opts: SetPasswordOpts) => Promise<SetPasswordResult>;\n  /**\n   * Verify JWT token.\n   *\n   * @param token - Token value.\n   * @returns User assigned to token and the information if the token is valid or not.\n   */\n  verifyToken: () => Promise<VerifyTokenResult>;\n  /**\n   * Executing externalAuthenticationUrl mutation will prepare special URL which will redirect user to requested\n   * page after successfull authentication. After redirection state and code fields will be added to the URL.\n   *\n   * @param opts - Object withpluginId default value set as \"mirumee.authentication.openidconnect\" and input as\n   * JSON with redirectUrl - the URL where the user should be redirected after successful authentication.\n   * @returns Authentication data and errors\n   */\n  getExternalAuthUrl: (\n    opts: GetExternalAuthUrlOpts\n  ) => Promise<GetExternalAuthUrlResult>;\n  /**\n   * The externalObtainAccessTokens mutation will generate requested access tokens.\n   *\n   * @param opts - Object withpluginId default value set as \"mirumee.authentication.openidconnect\" and input as\n   * JSON with code - the authorization code received from the OAuth provider and state - the state value received\n   * from the OAuth provider\n   * @returns Login authentication data and errors\n   */\n  getExternalAccessToken: (\n    opts: GetExternalAccessTokenOpts\n  ) => Promise<GetExternalAccessTokenResult>;\n  /**\n   * The externalRefresh mutation will generate new access tokens when provided with a valid refresh token.\n   *\n   * @param includeUser - Whether to fetch user. Default false.\n   * @returns Token refresh data and errors\n   */\n  refreshExternalToken: (\n    includeUser?: boolean\n  ) => Promise<RefreshExternalTokenResult>;\n  /**\n   * The mutation will verify the authentication token.\n   *\n   * @returns Token verification data and errors\n   */\n  verifyExternalToken: () => Promise<VerifyExternalTokenResult>;\n}\n\nexport const auth = ({\n  apolloClient: client,\n  channel,\n}: SaleorClientMethodsProps): AuthSDK => {\n  const login: AuthSDK[\"login\"] = ({ includeDetails = true, ...opts }) => {\n    const query = includeDetails ? USER : USER_WITHOUT_DETAILS;\n    const loginMutation = includeDetails ? LOGIN : LOGIN_WITHOUT_DETAILS;\n\n    client.writeQuery({\n      query,\n      data: {\n        authenticating: true,\n      },\n    });\n\n    return client.mutate<LoginMutation, LoginMutationVariables>({\n      mutation: loginMutation,\n      variables: {\n        ...opts,\n      },\n      update: (_, { data }) => {\n        if (data?.tokenCreate?.token) {\n          storage.setTokens({\n            accessToken: data.tokenCreate.token,\n            csrfToken: data.tokenCreate.csrfToken,\n          });\n        } else {\n          client.writeQuery({\n            query,\n            data: {\n              authenticating: false,\n            },\n          });\n        }\n      },\n    });\n  };\n\n  const logout: AuthSDK[\"logout\"] = async opts => {\n    const authPluginId = storage.getAuthPluginId();\n\n    storage.clear();\n\n    client.writeQuery({\n      query: USER,\n      data: {\n        authenticating: false,\n      },\n    });\n\n    client.resetStore();\n\n    if (authPluginId && opts?.input) {\n      const result = await client.mutate<\n        ExternalLogoutMutation,\n        ExternalLogoutMutationVariables\n      >({\n        mutation: EXTERNAL_LOGOUT,\n        variables: {\n          ...opts,\n          pluginId: authPluginId,\n        },\n      });\n      return result;\n    }\n    return null;\n  };\n\n  const register: AuthSDK[\"register\"] = async opts =>\n    await client.mutate<RegisterMutation, RegisterMutationVariables>({\n      mutation: REGISTER,\n      variables: {\n        input: {\n          ...opts,\n          channel,\n        },\n      },\n    });\n\n  const refreshToken: AuthSDK[\"refreshToken\"] = (includeUser = false) => {\n    const csrfToken = storage.getCSRFToken();\n\n    if (!csrfToken) {\n      throw Error(\"csrfToken not present\");\n    }\n\n    if (includeUser) {\n      return client.mutate<\n        RefreshTokenWithUserMutation,\n        RefreshTokenWithUserMutationVariables\n      >({\n        mutation: REFRESH_TOKEN_WITH_USER,\n        variables: {\n          csrfToken,\n        },\n        update: (_, { data }) => {\n          if (data?.tokenRefresh?.token) {\n            storage.setAccessToken(data.tokenRefresh.token);\n          } else {\n            logout();\n          }\n        },\n      });\n    }\n\n    return client.mutate<RefreshTokenMutation, RefreshTokenMutationVariables>({\n      mutation: REFRESH_TOKEN,\n      variables: {\n        csrfToken,\n      },\n      update: (_, { data }) => {\n        if (data?.tokenRefresh?.token) {\n          storage.setAccessToken(data.tokenRefresh.token);\n        } else {\n          logout();\n        }\n      },\n    });\n  };\n\n  const verifyToken: AuthSDK[\"verifyToken\"] = async () => {\n    const token = storage.getAccessToken();\n\n    if (!token) {\n      throw Error(\"Token not present\");\n    }\n\n    const result = await client.mutate<\n      VerifyTokenMutation,\n      VerifyTokenMutationVariables\n    >({\n      mutation: VERIFY_TOKEN,\n      variables: { token },\n    });\n\n    if (!result.data?.tokenVerify?.isValid) {\n      logout();\n    }\n\n    return result;\n  };\n\n  const changePassword: AuthSDK[\"changePassword\"] = async opts => {\n    const result = await client.mutate<\n      PasswordChangeMutation,\n      PasswordChangeMutationVariables\n    >({\n      mutation: CHANGE_USER_PASSWORD,\n      variables: { ...opts },\n    });\n\n    return result;\n  };\n\n  const requestPasswordReset: AuthSDK[\"requestPasswordReset\"] = async opts => {\n    const result = await client.mutate<\n      RequestPasswordResetMutation,\n      RequestPasswordResetMutationVariables\n    >({\n      mutation: REQUEST_PASSWORD_RESET,\n      variables: { ...opts, channel },\n    });\n\n    return result;\n  };\n\n  const setPassword: AuthSDK[\"setPassword\"] = opts => {\n    return client.mutate<SetPasswordMutation, SetPasswordMutationVariables>({\n      mutation: SET_PASSWORD,\n      variables: { ...opts },\n      update: (_, { data }) => {\n        if (data?.setPassword?.token) {\n          storage.setTokens({\n            accessToken: data.setPassword.token,\n            csrfToken: data.setPassword.csrfToken || null,\n          });\n        }\n      },\n    });\n  };\n\n  const getExternalAuthUrl: AuthSDK[\"getExternalAuthUrl\"] = async opts => {\n    const result = await client.mutate<\n      ExternalAuthenticationUrlMutation,\n      ExternalAuthenticationUrlMutationVariables\n    >({\n      mutation: EXTERNAL_AUTHENTICATION_URL,\n      variables: { ...opts },\n    });\n\n    return result;\n  };\n\n  const getExternalAccessToken: AuthSDK[\"getExternalAccessToken\"] = opts => {\n    client.writeQuery({\n      query: USER,\n      data: {\n        authenticating: true,\n      },\n    });\n\n    return client.mutate<\n      ExternalObtainAccessTokensMutation,\n      ExternalObtainAccessTokensMutationVariables\n    >({\n      mutation: OBTAIN_EXTERNAL_ACCESS_TOKEN,\n      variables: {\n        ...opts,\n      },\n      update: (_, { data }) => {\n        if (data?.externalObtainAccessTokens?.token) {\n          storage.setAuthPluginId(opts.pluginId);\n          storage.setTokens({\n            accessToken: data.externalObtainAccessTokens.token,\n            csrfToken: data.externalObtainAccessTokens.csrfToken || null,\n          });\n        } else {\n          client.writeQuery({\n            query: USER,\n            data: {\n              authenticating: false,\n            },\n          });\n        }\n      },\n    });\n  };\n\n  const refreshExternalToken: AuthSDK[\"refreshExternalToken\"] = (\n    includeUser = false\n  ) => {\n    const csrfToken = storage.getCSRFToken();\n    const authPluginId = storage.getAuthPluginId();\n\n    if (!csrfToken) {\n      throw Error(\"csrfToken not present\");\n    }\n\n    if (includeUser) {\n      return client.mutate<\n        ExternalRefreshWithUserMutation,\n        ExternalRefreshWithUserMutationVariables\n      >({\n        mutation: EXTERNAL_REFRESH_WITH_USER,\n        variables: {\n          pluginId: authPluginId,\n          input: JSON.stringify({\n            csrfToken,\n          }),\n        },\n        update: (_, { data }) => {\n          if (data?.externalRefresh?.token) {\n            storage.setTokens({\n              accessToken: data.externalRefresh.token,\n              csrfToken: data.externalRefresh.csrfToken || null,\n            });\n          } else {\n            logout();\n          }\n        },\n      });\n    }\n\n    return client.mutate<\n      ExternalRefreshMutation,\n      ExternalRefreshMutationVariables\n    >({\n      mutation: EXTERNAL_REFRESH,\n      variables: {\n        pluginId: authPluginId,\n        input: JSON.stringify({\n          csrfToken,\n        }),\n      },\n      update: (_, { data }) => {\n        if (data?.externalRefresh?.token) {\n          storage.setTokens({\n            accessToken: data.externalRefresh.token,\n            csrfToken: data.externalRefresh.csrfToken || null,\n          });\n        } else {\n          logout();\n        }\n      },\n    });\n  };\n\n  const verifyExternalToken: AuthSDK[\"verifyExternalToken\"] = async () => {\n    const csrfToken = storage.getCSRFToken();\n    const authPluginId = storage.getAuthPluginId();\n\n    if (!csrfToken) {\n      throw Error(\"csrfToken not present\");\n    }\n\n    const result = await client.mutate<\n      ExternalVerifyMutation,\n      ExternalVerifyMutationVariables\n    >({\n      mutation: EXTERNAL_VERIFY_TOKEN,\n      variables: {\n        pluginId: authPluginId,\n        input: JSON.stringify({\n          csrfToken,\n        }),\n      },\n    });\n\n    if (!result.data?.externalVerify?.isValid) {\n      storage.clear();\n    }\n\n    return result;\n  };\n\n  return {\n    changePassword,\n    getExternalAccessToken,\n    getExternalAuthUrl,\n    login,\n    logout,\n    refreshExternalToken,\n    refreshToken,\n    register,\n    requestPasswordReset,\n    setPassword,\n    verifyExternalToken,\n    verifyToken,\n  };\n};\n","import {\n  CONFIRM_ACCOUNT,\n  CONFIRM_EMAIL_CHANGE,\n  CREATE_ACCOUNT_ADDRESS,\n  DELETE_ACCOUNT,\n  DELETE_ACCOUNT_ADDRESS,\n  REQUEST_DELETE_ACCOUNT,\n  REQUEST_EMAIL_CHANGE,\n  SET_ACCOUNT_DEFAULT_ADDRESS,\n  UPDATE_ACCOUNT,\n  UPDATE_ACCOUNT_ADDRESS,\n} from \"../apollo/mutations\";\nimport {\n  AccountConfirmMutation,\n  AccountConfirmMutationVariables,\n  AccountDeleteMutation,\n  AccountDeleteMutationVariables,\n  AccountRequestDeletionMutation,\n  AccountRequestDeletionMutationVariables,\n  AccountUpdateMutation,\n  AccountUpdateMutationVariables,\n  ConfirmEmailChangeMutation,\n  ConfirmEmailChangeMutationVariables,\n  CreateAccountAddressMutation,\n  CreateAccountAddressMutationVariables,\n  DeleteAccountAddressMutation,\n  DeleteAccountAddressMutationVariables,\n  RequestEmailChangeMutation,\n  RequestEmailChangeMutationVariables,\n  SetAccountDefaultAddressMutation,\n  SetAccountDefaultAddressMutationVariables,\n  UpdateAccountAddressMutation,\n  UpdateAccountAddressMutationVariables,\n} from \"../apollo/types\";\nimport { auth } from \"./auth\";\nimport {\n  AccountDeleteResult,\n  AccountRequestDeletionResult,\n  ConfirmAccountOpts,\n  ConfirmAccountResult,\n  ConfirmEmailChangeResult,\n  CreateAccountAddressResult,\n  DeleteAccountAddressResult,\n  RequestEmailChangeResult,\n  SaleorClientMethodsProps,\n  SetAccountDefaultAddressResult,\n  UpdateAccountAddressResult,\n  UpdateAccountResult,\n} from \"./types\";\nimport {\n  CreateAccountAddressOpts,\n  RequestEmailChangeOpts,\n  SetAccountDefaultAddressOpts,\n  UpdateAccountOpts,\n  UpdateAccountAddressOpts,\n} from \"./types\";\n\nexport interface UserSDK {\n  /**\n   * Remove user account.\n   *\n   * @param token - A one-time token required to remove account. Sent by email using AccountRequestDeletion mutation.\n   * @returns Deleted user's account data and errors.\n   */\n  accountDelete: (token: string) => Promise<AccountDeleteResult>;\n  /**\n   * Sends an email with the account removal link for the logged-in user.\n   *\n   * @param redirectUrl - URL of a view where users should be redirected to delete their account. URL in RFC 1808 format.\n   * @returns Errors if there are some.\n   */\n  accountRequestDeletion: (\n    redirectUrl: string\n  ) => Promise<AccountRequestDeletionResult>;\n  /**\n   * Confirm the email change of the logged-in user.\n   *\n   * @param token - A one-time token required to change the email.\n   * @returns A user instance with a new email and errors.\n   */\n  confirmEmailChange: (token: string) => Promise<ConfirmEmailChangeResult>;\n  /**\n   * Create a new address for the account.\n   *\n   * @param opts - Object with fields required to create address and a type of address.\n   * If provided, the new address will be automatically assigned as the customer's default address of that type.\n   * @returns Updated user account.\n   */\n  createAccountAddress: (\n    opts: CreateAccountAddressOpts\n  ) => Promise<CreateAccountAddressResult>;\n  /**\n   * Delete an address of the logged-in account.\n   *\n   * @param addressId - ID of the address to delete.\n   * @returns Updated user account.\n   */\n  deleteAccountAddress: (\n    addressId: string\n  ) => Promise<DeleteAccountAddressResult>;\n  /**\n   * Request email change of the logged in user.\n   *\n   * @param opts - Object with new user email, user's password and URL of a view where users should be redirected to update the email address.\n   * @returns A user instance and errors.\n   */\n  requestEmailChange: (\n    opts: RequestEmailChangeOpts\n  ) => Promise<RequestEmailChangeResult>;\n  /**\n   * Sets a default address for the authenticated account.\n   *\n   * @param opts - Object with ID of the address to set as default and the type of address.\n   * @returns Updated user account.\n   */\n  setAccountDefaultAddress: (\n    opts: SetAccountDefaultAddressOpts\n  ) => Promise<SetAccountDefaultAddressResult>;\n  /**\n   * Updates the account of the logged-in account.\n   *\n   * @param opts - Fields required to update the account of the logged-in account.\n   * @returns Updated user account.\n   */\n  updateAccount: (opts: UpdateAccountOpts) => Promise<UpdateAccountResult>;\n  /**\n   * Updates an address of the logged-in account.\n   *\n   * @param opts - Object with ID of the address to update and fields required to update the address.\n   * @returns Updated user account.\n   */\n  updateAccountAddress: (\n    opts: UpdateAccountAddressOpts\n  ) => Promise<UpdateAccountAddressResult>;\n  /**\n   * Confirms user account with token sent by email during registration.\n   *\n   * @param opts - Object with email of the user and one-time token required to confirm the account.\n   * @returns Confirmed user account.\n   */\n  confirmAccount: (opts: ConfirmAccountOpts) => Promise<ConfirmAccountResult>;\n}\n\nexport const user = ({\n  apolloClient: client,\n  channel,\n}: SaleorClientMethodsProps): UserSDK => {\n  const _auth = auth({ apolloClient: client, channel });\n\n  const accountDelete: UserSDK[\"accountDelete\"] = async token => {\n    const result = await client.mutate<\n      AccountDeleteMutation,\n      AccountDeleteMutationVariables\n    >({\n      mutation: DELETE_ACCOUNT,\n      variables: { token },\n    });\n\n    _auth.logout();\n\n    return result;\n  };\n\n  const accountRequestDeletion: UserSDK[\"accountRequestDeletion\"] = async redirectUrl => {\n    const result = await client.mutate<\n      AccountRequestDeletionMutation,\n      AccountRequestDeletionMutationVariables\n    >({\n      mutation: REQUEST_DELETE_ACCOUNT,\n      variables: { channel, redirectUrl },\n    });\n\n    return result;\n  };\n\n  const confirmEmailChange: UserSDK[\"confirmEmailChange\"] = async token => {\n    const result = await client.mutate<\n      ConfirmEmailChangeMutation,\n      ConfirmEmailChangeMutationVariables\n    >({\n      mutation: CONFIRM_EMAIL_CHANGE,\n      variables: { channel, token },\n    });\n\n    return result;\n  };\n\n  const requestEmailChange: UserSDK[\"requestEmailChange\"] = async opts => {\n    const result = await client.mutate<\n      RequestEmailChangeMutation,\n      RequestEmailChangeMutationVariables\n    >({\n      mutation: REQUEST_EMAIL_CHANGE,\n      variables: { ...opts, channel: opts.channel || channel },\n    });\n\n    return result;\n  };\n\n  const updateAccount: UserSDK[\"updateAccount\"] = async opts => {\n    const result = await client.mutate<\n      AccountUpdateMutation,\n      AccountUpdateMutationVariables\n    >({\n      mutation: UPDATE_ACCOUNT,\n      variables: { ...opts },\n    });\n\n    return result;\n  };\n\n  const setAccountDefaultAddress: UserSDK[\"setAccountDefaultAddress\"] = async opts => {\n    const result = await client.mutate<\n      SetAccountDefaultAddressMutation,\n      SetAccountDefaultAddressMutationVariables\n    >({\n      mutation: SET_ACCOUNT_DEFAULT_ADDRESS,\n      variables: { ...opts },\n    });\n\n    return result;\n  };\n\n  const createAccountAddress: UserSDK[\"createAccountAddress\"] = async opts => {\n    const result = await client.mutate<\n      CreateAccountAddressMutation,\n      CreateAccountAddressMutationVariables\n    >({\n      mutation: CREATE_ACCOUNT_ADDRESS,\n      variables: { ...opts },\n    });\n\n    return result;\n  };\n\n  const deleteAccountAddress: UserSDK[\"deleteAccountAddress\"] = async addressId => {\n    const result = await client.mutate<\n      DeleteAccountAddressMutation,\n      DeleteAccountAddressMutationVariables\n    >({\n      mutation: DELETE_ACCOUNT_ADDRESS,\n      variables: { addressId },\n    });\n\n    return result;\n  };\n\n  const updateAccountAddress: UserSDK[\"updateAccountAddress\"] = async opts => {\n    const result = await client.mutate<\n      UpdateAccountAddressMutation,\n      UpdateAccountAddressMutationVariables\n    >({\n      mutation: UPDATE_ACCOUNT_ADDRESS,\n      variables: { ...opts },\n    });\n\n    return result;\n  };\n\n  const confirmAccount: UserSDK[\"confirmAccount\"] = async opts => {\n    const result = await client.mutate<\n      AccountConfirmMutation,\n      AccountConfirmMutationVariables\n    >({\n      mutation: CONFIRM_ACCOUNT,\n      variables: { ...opts },\n    });\n\n    return result;\n  };\n\n  return {\n    accountDelete,\n    accountRequestDeletion,\n    confirmEmailChange,\n    createAccountAddress,\n    deleteAccountAddress,\n    requestEmailChange,\n    updateAccount,\n    updateAccountAddress,\n    setAccountDefaultAddress,\n    confirmAccount,\n  };\n};\n","import { USER } from \"../apollo/queries\";\nimport { UserQuery } from \"../apollo/types\";\nimport { SaleorClientInternals } from \"./types\";\n\nexport type State = UserQuery | null;\n\nexport const getState = (\n  client: SaleorClientInternals[\"apolloClient\"]\n): State =>\n  client.readQuery<UserQuery>({\n    query: USER,\n  });\n","import {\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache,\n  NormalizedCacheObject,\n  Reference,\n  FetchResult,\n} from \"@apollo/client\";\nimport fetch from \"cross-fetch\";\nimport jwtDecode from \"jwt-decode\";\n\nimport { TypedTypePolicies } from \"./apollo-helpers\";\nimport { JWTToken } from \"../core\";\nimport { AuthSDK, auth } from \"../core/auth\";\nimport { storage } from \"../core/storage\";\nimport { ExternalRefreshMutation, RefreshTokenMutation } from \"./types\";\n\nlet client: ApolloClient<NormalizedCacheObject>;\nlet authClient: AuthSDK;\nlet refreshPromise:\n  | ReturnType<AuthSDK[\"refreshToken\"]>\n  | ReturnType<AuthSDK[\"refreshExternalToken\"]>\n  | null = null;\nconst isTokenRefreshExternal = (\n  result: RefreshTokenMutation | ExternalRefreshMutation\n): result is ExternalRefreshMutation => \"externalRefresh\" in result;\n\nexport type FetchConfig = Partial<{\n  /**\n   * Enable auto token refreshing. Default to `true`.\n   */\n  autoTokenRefresh: boolean;\n  /**\n   * Set a value for skew between local time and token expiration date in\n   * seconds (only together with `autoTokenRefresh`). Defaults to `120`.\n   */\n  tokenRefreshTimeSkew: number;\n  /**\n   * Refresh token and retry the request when Saleor responds with `Unauthorized` error.\n   * Defaults to `true`.\n   */\n  refreshOnUnauthorized: boolean;\n}>;\n\nexport const createFetch = ({\n  autoTokenRefresh = true,\n  tokenRefreshTimeSkew = 120,\n  refreshOnUnauthorized = true,\n}: FetchConfig = {}) => async (\n  input: RequestInfo,\n  init: RequestInit = {}\n): Promise<Response> => {\n  if (!client) {\n    throw new Error(\n      \"Could not find Saleor's client instance. Did you forget to call createSaleorClient()?\"\n    );\n  }\n\n  let token = storage.getAccessToken();\n  const authPluginId = storage.getAuthPluginId();\n\n  try {\n    if (\n      [\"refreshToken\", \"externalRefresh\"].includes(\n        // INFO: Non-null assertion is enabled because the block is wrapped inside try/catch\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        JSON.parse(init.body!.toString()).operationName\n      )\n    ) {\n      return fetch(input, init);\n    }\n  } catch (e) {}\n\n  if (autoTokenRefresh && token) {\n    // auto refresh token before provided time skew (in seconds) until it expires\n    const expirationTime =\n      (jwtDecode<JWTToken>(token).exp - tokenRefreshTimeSkew) * 1000;\n\n    try {\n      if (refreshPromise) {\n        await refreshPromise;\n      } else if (Date.now() >= expirationTime) {\n        // refreshToken automatically updates token in storage\n        refreshPromise = authPluginId\n          ? authClient.refreshExternalToken()\n          : authClient.refreshToken();\n        await refreshPromise;\n      }\n    } catch (e) {\n    } finally {\n      refreshPromise = null;\n    }\n    token = storage.getAccessToken();\n  }\n\n  if (token) {\n    init.headers = {\n      ...init.headers,\n      \"authorization-bearer\": token,\n    };\n  }\n\n  if (refreshOnUnauthorized && token) {\n    const response = await fetch(input, init);\n    const data: FetchResult = await response.clone().json();\n    const isUnauthenticated = data?.errors?.some(\n      error => error.extensions?.exception.code === \"ExpiredSignatureError\"\n    );\n    let refreshTokenResponse: FetchResult<\n      RefreshTokenMutation | ExternalRefreshMutation,\n      Record<string, unknown>,\n      Record<string, unknown>\n    > | null = null;\n\n    if (isUnauthenticated) {\n      try {\n        if (refreshPromise) {\n          refreshTokenResponse = await refreshPromise;\n        } else {\n          refreshPromise = authPluginId\n            ? authClient.refreshExternalToken()\n            : authClient.refreshToken();\n          refreshTokenResponse = await refreshPromise;\n        }\n\n        if (\n          refreshTokenResponse.data &&\n          isTokenRefreshExternal(refreshTokenResponse.data)\n            ? refreshTokenResponse.data.externalRefresh?.token\n            : refreshTokenResponse.data?.tokenRefresh?.token\n        ) {\n          // check if mutation returns a valid token after refresh and retry the request\n          return createFetch({\n            autoTokenRefresh: false,\n            refreshOnUnauthorized: false,\n          })(input, init);\n        } else {\n          // after Saleor returns ExpiredSignatureError status and token refresh fails\n          // we log out the user and return the failed response\n          authClient.logout();\n        }\n      } catch (e) {\n      } finally {\n        refreshPromise = null;\n      }\n    }\n\n    return response;\n  }\n\n  return fetch(input, init);\n};\n\nconst getTypePolicies = (autologin: boolean): TypedTypePolicies => ({\n  Query: {\n    fields: {\n      authenticated: {\n        read(_, { readField, toReference }): boolean {\n          return !!readField(\n            \"id\",\n            toReference({\n              __typename: \"User\",\n            })\n          );\n        },\n      },\n      me: {\n        read(_, { toReference, canRead }): Reference | undefined | null {\n          const ref = toReference({\n            __typename: \"User\",\n          });\n\n          return canRead(ref) ? ref : null;\n        },\n      },\n      authenticating: {\n        read(\n          read = autologin && !!storage.getCSRFToken(),\n          { readField }\n        ): boolean {\n          if (readField(\"authenticated\")) {\n            return false;\n          }\n\n          return read;\n        },\n      },\n    },\n  },\n  User: {\n    /**\n     * IMPORTANT\n     * This works as long as we have 1 User cache object which is the current logged in User.\n     * If the client should ever fetch additional Users, this should be removed\n     * and the login methods (token create or verify) should be responsible for writing USER query cache manually.\n     */\n    keyFields: [],\n    fields: {\n      addresses: {\n        merge: false,\n      },\n    },\n  },\n});\n\nexport const createApolloClient = (\n  apiUrl: string,\n  autologin: boolean,\n  fetchOptions?: FetchConfig\n): ApolloClient<NormalizedCacheObject> => {\n  const httpLink = createHttpLink({\n    fetch: createFetch(fetchOptions),\n    uri: apiUrl,\n    credentials: \"include\",\n  });\n\n  const cache = new InMemoryCache({\n    typePolicies: getTypePolicies(autologin),\n  });\n\n  client = new ApolloClient({\n    cache,\n    link: httpLink,\n  });\n\n  /**\n   * Refreshing token code should stay under core/auth.ts To get this method available,\n   * we need to call \"auth()\" here. refreshToken mutation doesn't require channel, so it\n   * doesn't have to be populated with value.\n   */\n  authClient = auth({ apolloClient: client, channel: \"\" });\n\n  return client;\n};\n","import { auth } from \"./auth\";\nimport { user } from \"./user\";\nimport { getState, State } from \"./state\";\nimport { createApolloClient } from \"../apollo\";\nimport { SaleorClient, SaleorClientOpts } from \"./types\";\n\nimport { createStorage, storage } from \"./storage\";\nimport { DEVELOPMENT_MODE, WINDOW_EXISTS } from \"../constants\";\n\nexport const createSaleorClient = ({\n  apiUrl,\n  channel,\n  opts = {},\n}: SaleorClientOpts): SaleorClient => {\n  let _channel = channel;\n  const { autologin = true, fetchOpts } = opts;\n\n  const setChannel = (channel: string): string => {\n    _channel = channel;\n    return _channel;\n  };\n\n  createStorage(autologin);\n  const apolloClient = createApolloClient(apiUrl, autologin, fetchOpts);\n  const coreInternals = { apolloClient, channel: _channel };\n  const authSDK = auth(coreInternals);\n  const userSDK = user(coreInternals);\n\n  if (autologin) {\n    const csrfToken = storage.getCSRFToken();\n    const authPluginId = storage.getAuthPluginId();\n\n    if (csrfToken && authPluginId) {\n      authSDK.refreshExternalToken(true);\n    } else if (csrfToken) {\n      authSDK.refreshToken(true);\n    }\n  }\n\n  const client = {\n    auth: authSDK,\n    user: userSDK,\n    config: { channel: _channel, setChannel, autologin },\n    _internal: { apolloClient },\n    getState: (): State => getState(apolloClient),\n  };\n\n  if (DEVELOPMENT_MODE && WINDOW_EXISTS) {\n    (window as any).__SALEOR_CLIENT__ = client;\n  }\n\n  return client;\n};\n","import React from \"react\";\nimport { SaleorClient } from \"../../core\";\n\nexport type SaleorContextType = {\n  client: SaleorClient;\n};\n\nexport const SaleorContext = React.createContext<SaleorClient | null>(null);\n\nexport const SaleorProvider: React.FC<{ client: SaleorClient }> = ({\n  client,\n  children,\n}) => {\n  const [context, setContext] = React.useState<SaleorClient>(client);\n\n  React.useEffect(() => {\n    setContext(client);\n  }, [client]);\n\n  if (context) {\n    return (\n      <SaleorContext.Provider value={context}>\n        {children}\n      </SaleorContext.Provider>\n    );\n  }\n\n  return null;\n};\n","import { useContext } from \"react\";\nimport { SaleorClient } from \"../../core/types\";\nimport { SaleorContext } from \"../components/SaleorProvider\";\n\nconst CreateSaleorHook = <T extends keyof SaleorClient>(\n  key: T\n): SaleorClient[T] => {\n  const saleorClient = useContext(SaleorContext);\n\n  if (!saleorClient) {\n    throw new Error(\n      \"Could not find saleor's apollo client in the context. Did you forget to wrap the root component in a <SaleorProvider>?\"\n    );\n  }\n\n  const getHookData = (): SaleorClient[T] => {\n    return saleorClient[key];\n  };\n\n  return getHookData();\n};\n\nexport const hookFactory = <T extends keyof SaleorClient>(\n  query: T\n) => (): SaleorClient[T] => CreateSaleorHook(query);\n","import { useContext } from \"react\";\nimport { DocumentNode, QueryResult, useQuery } from \"@apollo/client\";\nimport { SaleorContext } from \"../components/SaleorProvider\";\n\nconst CreateSaleorStateHook = <TData, TVariables>(\n  query: DocumentNode\n): QueryResult<TData, TVariables> => {\n  const saleorClient = useContext(SaleorContext);\n\n  if (!saleorClient) {\n    throw new Error(\n      \"Could not find saleor's apollo client in the context. Did you forget to wrap the root component in a <SaleorProvider>?\"\n    );\n  }\n\n  return useQuery<TData, TVariables>(query, {\n    client: saleorClient._internal.apolloClient,\n    fetchPolicy: \"cache-only\",\n  });\n};\n\nexport const hookStateFactory = <TData, TVariables>(\n  query: DocumentNode\n): QueryResult<TData, TVariables> =>\n  CreateSaleorStateHook<TData, TVariables>(query);\n","import { USER } from \"../../apollo/queries\";\nimport { UserQuery, UserQueryVariables } from \"../../apollo/types\";\nimport { hookFactory } from \"../helpers/hookFactory\";\nimport { hookStateFactory } from \"../helpers/hookStateFactory\";\n\n/**\n * React hook to get authorization methods\n *\n * @returns Saleor's authorization methods\n */\nexport const useAuth = hookFactory(\"auth\");\n\n/**\n * React hook to get user's authentication data.\n *\n * @returns Object with user's data\n */\nexport const useAuthState = (): UserQuery => {\n  const { data } = hookStateFactory<UserQuery, UserQueryVariables>(USER);\n\n  if (!data) {\n    throw new Error(\n      \"Cache query result is undefined. Invalid cache configuration.\"\n    );\n  }\n\n  return data;\n};\n","import { hookFactory } from \"../helpers/hookFactory\";\n\n/**\n * React hook to get user's account methods\n *\n * @returns Saleor's user's account methods\n */\nexport const useUser = hookFactory(\"user\");\n","import { hookFactory } from \"../helpers/hookFactory\";\n\n/**\n * React hook to get client's config methods\n *\n * @returns Saleor's client's config methods\n */\nexport const useSaleorConfig = hookFactory(\"config\");\n"],"names":["undefined","accountErrorFragment","gql","addressFragment","userBaseFragment","userDetailsFragment","LOGIN_WITHOUT_DETAILS","LOGIN","REGISTER","REFRESH_TOKEN","REFRESH_TOKEN_WITH_USER","VERIFY_TOKEN","EXTERNAL_AUTHENTICATION_URL","OBTAIN_EXTERNAL_ACCESS_TOKEN","EXTERNAL_REFRESH","EXTERNAL_REFRESH_WITH_USER","EXTERNAL_VERIFY_TOKEN","EXTERNAL_LOGOUT","CHANGE_USER_PASSWORD","REQUEST_PASSWORD_RESET","SET_PASSWORD","REQUEST_EMAIL_CHANGE","CONFIRM_EMAIL_CHANGE","REQUEST_DELETE_ACCOUNT","DELETE_ACCOUNT","UPDATE_ACCOUNT","SET_ACCOUNT_DEFAULT_ADDRESS","DELETE_ACCOUNT_ADDRESS","CREATE_ACCOUNT_ADDRESS","UPDATE_ACCOUNT_ADDRESS","CONFIRM_ACCOUNT","WINDOW_EXISTS","window","LOCAL_STORAGE_EXISTS","localStorage","DEVELOPMENT_MODE","process","env","NODE_ENV","SALEOR_AUTH_PLUGIN_ID","SALEOR_CSRF_TOKEN","storage","createStorage","autologinEnabled","authPluginId","getItem","accessToken","csrfToken","setAuthPluginId","pluginId","setItem","removeItem","setCSRFToken","token","setAccessToken","getAuthPluginId","getAccessToken","getCSRFToken","setTokens","clear","USER_WITHOUT_DETAILS","USER","auth","client","apolloClient","channel","login","includeDetails","opts","query","loginMutation","writeQuery","data","authenticating","mutate","mutation","variables","update","_","tokenCreate","logout","resetStore","input","result","register","refreshToken","includeUser","Error","tokenRefresh","verifyToken","tokenVerify","isValid","changePassword","requestPasswordReset","setPassword","getExternalAuthUrl","getExternalAccessToken","externalObtainAccessTokens","refreshExternalToken","JSON","stringify","externalRefresh","verifyExternalToken","externalVerify","user","_auth","accountDelete","accountRequestDeletion","redirectUrl","confirmEmailChange","requestEmailChange","updateAccount","setAccountDefaultAddress","createAccountAddress","deleteAccountAddress","addressId","updateAccountAddress","confirmAccount","getState","readQuery","authClient","refreshPromise","isTokenRefreshExternal","createFetch","autoTokenRefresh","tokenRefreshTimeSkew","refreshOnUnauthorized","init","includes","parse","body","toString","operationName","fetch","expirationTime","jwtDecode","exp","Date","now","headers","response","clone","json","isUnauthenticated","errors","some","error","extensions","exception","code","refreshTokenResponse","getTypePolicies","autologin","Query","fields","authenticated","read","readField","toReference","__typename","me","canRead","ref","User","keyFields","addresses","merge","createApolloClient","apiUrl","fetchOptions","httpLink","createHttpLink","uri","credentials","cache","InMemoryCache","typePolicies","ApolloClient","link","createSaleorClient","_channel","fetchOpts","setChannel","coreInternals","authSDK","userSDK","config","_internal","__SALEOR_CLIENT__","SaleorContext","React","createContext","SaleorProvider","children","useState","context","setContext","useEffect","Provider","value","CreateSaleorHook","key","saleorClient","useContext","getHookData","hookFactory","CreateSaleorStateHook","useQuery","fetchPolicy","hookStateFactory","useAuth","useAuthState","useUser","useSaleorConfig"],"mappings":"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"}